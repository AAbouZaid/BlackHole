{"tagline":"Integrated ssh loging and security tool","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Blackhole","body":"## Overview\r\nBlackhole was designed to solve a problem we had where I work.\r\nOur problem was that we had a very large server platform, and a large number of users needing to connect to them. Mostly to give support.\r\nFurthermore users are constantly modified, thus had two choices.\r\nCreate all users on all servers (were too many) or we created a generic user for all of them.\r\nThe first option was impractical, especially for the high rotation of users.\r\nAnd the second was clearly unsafe, because there was no way to keep trace to each user or where it was connected to.\r\n\r\nWe needed something that was easy to manage and give us visibility of what users did.\r\n\r\nHow it works?\r\nBlackhole primarily a frontend, all users connection should be via this server.\r\nAnd the application is configured as user shell, to be the only thing they can run.\r\nThe database contains the information of all servers, grouped by environments.\r\nThen there are the private keys to be used for each connection depending on the user.\r\nThen each user has a profile associated with the servers that each user is allowed to connect.\r\n\r\nThe application is a curses-menu with the list of enabled servers.\r\nWhich contains all servers to which we have permission to connect.\r\n\r\nBut much more than that because blackhole stores information for each connection established.\r\n* What user\r\n* The user used to connect\r\n* Time of login\r\n* Time logout\r\n* Connection duration\r\n* The use (the number of commands that run / connect time)\r\n* The amount of keypresses\r\n\r\nBut also keeps a log of all the contents of each connection.\r\n\r\nAll this information can be viewed from the web that is integrated, which allows us to generate graphics and download the log for each connection.\r\n\r\nFunctionality Extras:\r\nApart from the above, Blackhole has other functionalities.\r\n* Chat server, where users can talk online.\r\n* Validation by token, can optionally enable token validation (which is sent by mail), and until it is entered correctly the user can not access.\r\n* Enabling user by time range, or a small group of servers.\r\n\r\n![Diagram](http://img717.imageshack.us/img717/371/diagramv.jpg)\r\n\r\n## Installation:\r\nThe installation process is a bit complex, since it has several dependencies.\r\nThe application is written in python and is based on the Django framework.\r\nIt runs on Linux (tested), OSX (tested) or any other UNIX compliant units.\r\nThis manual is a fresh install.\r\nThe installation was done on a Linux (Ubuntu 12.04) with LAMP (Apache-MySQL-PHP), Django 1.4 (was developed and tested with this version, although it might work with less. But I do not know), python 2.7 (with 2.6 should work fine).\r\n\r\nFirst of all, install all dependencies.\r\n* Django (https://www.djangoproject.com/)\r\n* paramiko\r\n* MySQLdb\r\n* Urwid\r\n* python-simplejson\r\n* django-qsstats-magic\r\n* python-dateutil\r\n* django_extensions\r\n* libapache2-mod-wsgi (Only if you want to use apache)\r\n\r\nMost can be installed via apt.\r\nI recommend install Django  using the tarball in their website.\r\n\r\napt-get install python-mysqldb python-paramiko python-urwid python-simplejson libapache2-mod-wsgi\r\n\r\nThere are three that we use pip (Python Package Index):\r\npip install django-qsstats-magic  python-dateutil django_extensions smpplib\r\n\r\nWith this done, we need to create the database and a user. (For this there are no instructions, I recommend installing phpmyadmin and do it from there).\r\nThis manual will use a database called blackhole, with a username and password blackhole / blackhole.\r\nI recommend using a more secure password in production.\r\n\r\nThe next step is to install the application.\r\nAs the application runs as Shell users, we will install in the / home. But it may be where you want:\r\n```\r\n$ cd /home\r\n$ tar zxvf BlackHole.tgz\r\n```\r\nWe must create a group (eg blackhole), which must be the primary group of all users who use the application.\r\n```\r\n$ groupadd blackhole\r\n```\r\n\r\nNow it is very important to change the permissions.\r\n```\r\n$ cd /home/blackHole\r\n$ chown â€“R root:blackhole ./\r\n```\r\n\r\n## Configuration of folders:\r\nThe next step is the configuration, the first thing to do is modify the configuration file named blackhole.config located in /home/BlackHole/\r\n\r\nThis is the content\r\n[settings]\r\ndebug = False\r\napplication_path = /home/BlackHole\r\nlog_path = /home/BlackHole/logs\r\nchat_enabled = True\r\ntoken_validation_enabled = False\r\n\r\nAPPLICATION_PATH value must be equal to where the application installed.\r\nAnd log_path entry is the directory where we want to keep logs of the sessions.\r\nIt is very important to make sure that directory is writable for the group blackhole.\r\n\r\n**NOTE: the logs will be stored in this directory, but will first try to be written in a directory with the name of the user profile within this directory. If that directory does not exist, will be stored in the directory indicated by log_path.**\r\n**These directory must be created by hand, and must also have write permissions for the group blackhole.**\r\n\r\nHere is also set if we want to enable chat option, and the option of token.\r\nEnabling token found here is global, then you can enable each user.\r\n\r\n## Database Configuration:\r\n\r\nOnce you have created the database and the user.\r\nWe have to enter it in the file: /home/BlackHole/black_hole/settings.py\r\nIn \"DATABASES\", we enter:\r\n* \"NAME\": the name of the database created\r\n* \"USER\": the name of the user created\r\n* \"PASSWORD\" user password set\r\n\r\n**NOTE: In addition to this we can change the TimeZone file.**\r\n**Example: TIME_ZONE = 'America / Chicago'**\r\n**And the language. Example: LANGUAGE_CODE = 'en-us'**\r\n**Currently the only enabled languages are English (en-us) and Spanish from Argentina (es-AR).**\r\n\r\nOnce it is ready, we need to create the tables.\r\nFor this we have to run the following command:\r\n```\r\ncd /home/BlackHole\r\n. /manage.py syncdb\r\n```\r\n\r\n\r\nand then to load some necessary settings:\r\n```\r\n. /manage.py initial_setup\r\n```\r\n\r\n## Web Server Configuration:\r\nTo run the website integrated with blackhole have 2 options.\r\nRun it with apache, or run it through the webserver built with django (Which is not recommended).\r\n\r\nTo facilitate integration with apache, delivered two necessary configuration files.\r\nThey are in \"/home/BlackHole/apache\"\r\nIn django.wsgi only must modify the installation directory is different from the manual.\r\n\r\nCopy the file site.example  to the directory sites-available, and you must enable it (if you modify the installation directory, must also be modified in this file):\r\n```\r\ncp site.example /etc/apache2/sites-available/blackhole\r\na2ensite blackhole\r\n````\r\nIn the configuration file example uses port 8080, so we have to enable the port in apache adding this to /etc/apache2/ports.conf\r\n```\r\nNameVirtualHost *: 8080\r\nListen 8080\r\n```\r\nWe can restart the apache.\r\n\r\nWe enter it through this url:\r\nhttp://localhost:8000/blackhole/index/\r\nWith the username and password you created earlier to create the database.\r\n![web](http://img32.imageshack.us/img32/957/indexgm.png)\r\n\r\n## Application Configuration:\r\n\r\nNow should load all the information about the user, servers, etc. keys.\r\n\r\nBy clicking on the \"Admin\", take us to this page:\r\n\r\n![Admin](http://img109.imageshack.us/img109/884/admintiff.png)\r\n\r\nWe must make a distinction between \"Auth-> Users\" and \"Black_Hole_Db-> Users\".\r\nIn the first option the user must be created that will manage the application only.\r\nThe second are the users who will be using it.\r\nLikewise you can create groups for administrative users who can do specific tasks.\r\nSuch as enabling and disabling users, but only that.\r\n\r\n## Administrative Users:\r\nIn Auth-> Users, we create these administrative users. Remember that for these users can access this site must be on the \"Staff\".\r\nIf you do not want to use groups, and just need that the users can so anything. Instead of giving specific permissions, they can enable as \"Superuser\".\r\n\r\n## Environment:\r\nThe environments are a logical grouping of servers. \r\n\r\n![Environment](http://img607.imageshack.us/img607/8046/enviroment.png)\r\n\r\n**NOTE: Do not use spaces in the Name field, since it is used for directories of logs and can cause problems.**\r\n\r\n## Host:\r\nIt is the configuration of each of the computers that we can connect.\r\n\r\n![Host](http://img802.imageshack.us/img802/5994/hosti.png)\r\n\r\n## User Identity:\r\nThe user identity is a fundamental concept that must be understood well.\r\nThe user identity is the user who will be using to connect to the selected device.\r\nBy default identity is created called \"self\".\r\nIdentities to be created are generic users.\r\nFor example if you have users connecting users with their own personal, they will use the identity \"self\".\r\nExample, if we have a user named John and he must connected to server A as  the user John, for that he will have to connect as \"self\".\r\nBut if that same user on server B is connected as the admin user for that server will have to connect with the identity \"admin\". \r\nAnd that must be created here, but not the identity John.\r\n\r\n\r\n## Session Identity:\r\nThe session identity is another important concept is going to associate a user identity to a server.\r\nThen the profiles are going to have one or more \"Identities Session\" associated.\r\n\r\n![Session Identity](http://img818.imageshack.us/img818/2807/sessionidentity.png)\r\n\r\n## Profile:\r\nHere we create different user profiles.\r\nThe profiles are a group of Session Identities, you cant have 2 Session Identities to the same host in one profile (See Known Bugs).\r\n\r\n![Profile](http://img560.imageshack.us/img560/5421/profileic.png)\r\n\r\n## Private Key:\r\nPrivate keys are the means used to connect to servers.\r\nThe private keys are by environment, so for our servers in the same environment we have loaded the same public keys for a user to be connected to one or more servers that environment.\r\nOne important thing is that you take should be created this way.\r\nExample if I have two Session Identities :\r\n* John -> server1 (PRODUCTION) -> as self\r\n* John -> server2 (PRODUCTION) -> as admin\r\nSo I have 2 keys created\r\nOne for the user admin and one for the user john (both for the PRODUCTION environment).\r\n\r\nIt is very important to select the correct type of key (DSA or RSA). \r\n![Private Key](http://img440.imageshack.us/img440/6919/keyc.png)\r\n\r\n## User:\r\nThe user has several fields that are optional, and are only useful if you use some extra functionality of BlackHole, as is the token validation. \r\n![User](http://img231.imageshack.us/img231/8118/userd.png)\r\n\r\nThe email field is not mandatory, but if you want to use email token must be complete.\r\nThe identifier field is some type of identifier of the user. But it is not mandatory.\r\nWhen a user is disabled, you can not connect to any server.\r\nBut there is another option, which is to enable it in a time range, and if outside this range can not enter any server.\r\nFor this option to work, the user has to be enabled.\r\nSince that option is evaluated before this.\r\nAlso can be restricted to environments that can log in, in this way even though the user has permissions to access other servers, it will not be able to connect.\r\nMobile field is to post token via SMS. Not required.\r\nAnd finally the Log Session option is to disable any user on time to avoid saving your sessions files (but will be stored in the database for statistics).\r\n \r\n## Use it\r\nWhen everything is ready, users will connect by ssh to blackhole and this would provide them the options they have available.\r\n![main window](http://img577.imageshack.us/img577/2091/mainwindowa.png)\r\n\r\nIf you have any problems with any keys when connected, will be indicated to the user.\r\n![Key error](http://img834.imageshack.us/img834/5834/invalidkey.png)\r\n\r\n## Chat:\r\nIf the option is enabled users can chat with to each other with the option in the menu (the user can log in once, if you already have another open chat connection, you will not be able to connect again). \r\n![Chat](http://img59.imageshack.us/img59/5710/chatsgk.png)\r\n\r\nThe Chatserver process must be running to use this functionality.\r\n```\r\n$ cd /home/BlackHole\r\n$ nohup ./startChatServer.py &\r\n```\r\n\r\n## Web:\r\nIn statistics we find many statistics, which can be requested by user or server.\r\n![Stats](http://img29.imageshack.us/img29/2551/statska.png)\r\n\r\n![Stats2](http://img33.imageshack.us/img33/9905/sourceg.png)\r\n\r\n![Stats3](http://img849.imageshack.us/img849/4737/logincount.png)\r\n\r\nFor each one we can select a time range and a statistic type.\r\nIn option logs we can find the option to search for a particular user sesions in a time range and then you can download the log of each session\r\n![Logs](http://img534.imageshack.us/img534/6042/logsx.png)\r\n\r\n## Extras:\r\nAs I wrote before, there are some extra features that are not enabled.\r\n*\tValidation of the web by radius (see notes in settings.py)\r\n*\tToek sent by mail, in addition to enable it in the configuration file you must modify the credentials in  /home/BlackHole/black_hole_gui/emailSender.py \r\n*\tToken can also be send by SMS, but you need to have access to a SMSC. If you want that you need to change the configuration in  /home/BlackHole/black_hole_gui/smsSender.py\r\n\r\nYou can send me an email if you have questions about these.\r\n\r\n\r\n## Known Bugs:\r\nThere are still several things to fix, the main ones are:\r\n* You can not put in a profile 2 Identities session of the same host. Blackhole but will have a problem in generating the menu and this will behave strangely. If you need a user can connect to the same server as 2 different users what we must do is create that host two times with different names and create 2 session identities.\r\n* The size of the terminal when you connect from blackhole to a server is the same of you blackhole terminal. If we change the size before you connect to a server would fit well, but if we change the window size after you connected to the server the terminal continue to have its original size.\r\n* If the server that runs Blackhole is not very powerful, can be that when we have many users connected and run any command that writes a lot on screen (Example \"run a select * from table\"), it may be that others feel that this slow. This is because  is consuming many resources to write on the screen and in the log of the session. Therefore it is recommended not to run it in virtual machine if you expect to have many users.\r\n"}